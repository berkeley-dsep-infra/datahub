replicaCount: 1

image:
  repository: us-central1-docker.pkg.dev/ucb-datahub-2018/core/node-placeholder-scaler
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.0.1-n4691.hff360c34"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}

nodeSelector: {}


affinity: {}

rbac:
  create: true

priorityClass:
  create: true


tolerations:

calendarUrl: https://calendar.google.com/calendar/ical/c_s47m3m1nuj3s81187k3b2b5s5o%40group.calendar.google.com/public/basic.ics

grafana:
  tags:
    - node-placeholder-scale
  url: https://grafana.datahub.berkeley.edu


# Calculate size of node placeholder by:
# 1. Select a node in the node pool you want to configure
#    export NODE=<node-name>
# 2. Get total amount of memory allocatable to pods on this node
#    k get node $NODE -o jsonpath='{.status.allocatable.memory}'
# 3. Get total amount of memory used by non-user pods on the node.
#    k get -A pod -l 'component!=user-placeholder' --field-selector spec.nodeName=$NODE -o jsonpath='{.items[*].spec.containers[*].resources.requests.memory}'
#    This will return memory units you'll need to sum yourself
#
# The node placeholder pod should be 'big' enough that it needs to be kicked out to get even a single
# user pod on the node - but not so big that it can't run on a node where other system pods are running!
#
# So we should make the memory be output of (2) - output of (3), with maybe another 256Mi wiggle room
# FIXME: LET US MAKE THIS INTO A SCRIPT!
nodePools:
  alpha:
    nodeSelector:
      hub.jupyter.org/pool-name: alpha-pool
    resources:
      requests:
        memory: 46786Mi
    replicas: 1
  beta:
    nodeSelector:
      hub.jupyter.org/pool-name: beta-pool
    resources:
      requests:
        memory: 46786Mi
    replicas: 1
  gamma:
    nodeSelector:
      hub.jupyter.org/pool-name: gamma-pool
    resources:
      requests:
        memory: 13000Mi
    replicas: 0
  delta:
    nodeSelector:
      hub.jupyter.org/pool-name: delta-pool
    resources:
      requests:
        memory: 46786Mi
    replicas: 1
  theta:
    nodeSelector:
      hub.jupyter.org/pool-name: theta-pool
    resources:
      requests:
        memory: 46786Mi
    replicas: 1
  theta:
    nodeSelector:
      hub.jupyter.org/pool-name: epsilon-pool
    resources:
      requests:
        memory: 46786Mi
    replicas: 1